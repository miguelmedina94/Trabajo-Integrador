{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  empleados: [{\n    id: '1',\n    nombre: 'Miguel Angel',\n    apellido: 'Medina',\n    email: 'miiguelmedina@gmail.com',\n    telefono: 381448899,\n    fecha_contrato: '2023-02-01',\n    salario: 1234,\n    comision: 5\n  }, {\n    id: '2',\n    nombre: 'Pablo Mariano',\n    apellido: 'Alderete',\n    email: 'mariano_mpk@hotmail.es',\n    telefono: 381556677,\n    fecha_contrato: '2018-05-15',\n    salario: 2222,\n    comision: 15\n  }, {\n    id: '3',\n    nombre: 'Luciano Sebastian',\n    apellido: 'Morales Carrasco',\n    email: 'luciano.testamet123@gmail.com',\n    telefono: 381112233,\n    fecha_contrato: '2020-10-01',\n    salario: 6534,\n    comision: 8\n  }]\n};\nexport const empleadosSlice = createSlice({\n  name: 'empleados',\n  initialState,\n  reducers: {\n    nuevoEmpleado: (state, action) => {\n      state.empleados.push(action.payload);\n      state.idNuevo++;\n    },\n    reemplazarEmpleado: (state, action) => {\n      state.empleados[action.payload.id - 1] = action.payload;\n    },\n    eliminarEmpleado: (state, action) => {\n      for (let i = 0; i < action.payload.length; i++) {\n        state.empleados = state.empleados.filter(empleado => empleado.id !== action.payload[i]);\n      }\n    }\n  }\n});\nexport const {\n  nuevoEmpleado,\n  reemplazarEmpleado,\n  eliminarEmpleado\n} = empleadosSlice.actions;\nexport default empleadosSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","empleados","id","nombre","apellido","email","telefono","fecha_contrato","salario","comision","empleadosSlice","name","reducers","nuevoEmpleado","state","action","push","payload","idNuevo","reemplazarEmpleado","eliminarEmpleado","i","length","filter","empleado","actions","reducer"],"sources":["C:/Miguel/Akademy/Trabajo-Integrador/Frontend/src/store/empleadosSlice/slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nconst initialState = {\r\n    empleados : [\r\n        {\r\n            id: '1',\r\n            nombre: 'Miguel Angel',\r\n            apellido: 'Medina',\r\n            email: 'miiguelmedina@gmail.com',\r\n            telefono: 381448899,\r\n            fecha_contrato: '2023-02-01',\r\n            salario: 1234,\r\n            comision: 5\r\n        },\r\n        {\r\n            id: '2',\r\n            nombre: 'Pablo Mariano',\r\n            apellido: 'Alderete',\r\n            email: 'mariano_mpk@hotmail.es',\r\n            telefono: 381556677,\r\n            fecha_contrato: '2018-05-15',\r\n            salario: 2222,\r\n            comision: 15\r\n        },\r\n        {\r\n            id: '3',\r\n            nombre: 'Luciano Sebastian',\r\n            apellido: 'Morales Carrasco',\r\n            email: 'luciano.testamet123@gmail.com',\r\n            telefono: 381112233,\r\n            fecha_contrato: '2020-10-01',\r\n            salario: 6534,\r\n            comision: 8\r\n        }\r\n    ]\r\n}\r\n\r\nexport const empleadosSlice = createSlice({\r\n    name: 'empleados',\r\n    initialState,\r\n    reducers:{\r\n        nuevoEmpleado: (state,action) => {\r\n            state.empleados.push(action.payload);\r\n            state.idNuevo++;\r\n        },\r\n        reemplazarEmpleado: (state,action) => {\r\n            state.empleados[action.payload.id-1] = action.payload;\r\n        },\r\n        eliminarEmpleado: (state, action) => {\r\n            for(let i = 0 ; i < action.payload.length ; i++){\r\n                state.empleados = state.empleados.filter(empleado => empleado.id !== action.payload[i])\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport const {nuevoEmpleado,reemplazarEmpleado,eliminarEmpleado} = empleadosSlice.actions; \r\n\r\nexport default empleadosSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAG,CACR;IACIC,EAAE,EAAE,GAAG;IACPC,MAAM,EAAE,cAAc;IACtBC,QAAQ,EAAE,QAAQ;IAClBC,KAAK,EAAE,yBAAyB;IAChCC,QAAQ,EAAE,SAAS;IACnBC,cAAc,EAAE,YAAY;IAC5BC,OAAO,EAAE,IAAI;IACbC,QAAQ,EAAE;EACd,CAAC,EACD;IACIP,EAAE,EAAE,GAAG;IACPC,MAAM,EAAE,eAAe;IACvBC,QAAQ,EAAE,UAAU;IACpBC,KAAK,EAAE,wBAAwB;IAC/BC,QAAQ,EAAE,SAAS;IACnBC,cAAc,EAAE,YAAY;IAC5BC,OAAO,EAAE,IAAI;IACbC,QAAQ,EAAE;EACd,CAAC,EACD;IACIP,EAAE,EAAE,GAAG;IACPC,MAAM,EAAE,mBAAmB;IAC3BC,QAAQ,EAAE,kBAAkB;IAC5BC,KAAK,EAAE,+BAA+B;IACtCC,QAAQ,EAAE,SAAS;IACnBC,cAAc,EAAE,YAAY;IAC5BC,OAAO,EAAE,IAAI;IACbC,QAAQ,EAAE;EACd,CAAC;AAET,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGX,WAAW,CAAC;EACtCY,IAAI,EAAE,WAAW;EACjBX,YAAY;EACZY,QAAQ,EAAC;IACLC,aAAa,EAAE,CAACC,KAAK,EAACC,MAAM,KAAK;MAC7BD,KAAK,CAACb,SAAS,CAACe,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;MACpCH,KAAK,CAACI,OAAO,EAAE;IACnB,CAAC;IACDC,kBAAkB,EAAE,CAACL,KAAK,EAACC,MAAM,KAAK;MAClCD,KAAK,CAACb,SAAS,CAACc,MAAM,CAACE,OAAO,CAACf,EAAE,GAAC,CAAC,CAAC,GAAGa,MAAM,CAACE,OAAO;IACzD,CAAC;IACDG,gBAAgB,EAAE,CAACN,KAAK,EAAEC,MAAM,KAAK;MACjC,KAAI,IAAIM,CAAC,GAAG,CAAC,EAAGA,CAAC,GAAGN,MAAM,CAACE,OAAO,CAACK,MAAM,EAAGD,CAAC,EAAE,EAAC;QAC5CP,KAAK,CAACb,SAAS,GAAGa,KAAK,CAACb,SAAS,CAACsB,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACtB,EAAE,KAAKa,MAAM,CAACE,OAAO,CAACI,CAAC,CAAC,CAAC;MAC3F;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACR,aAAa;EAACM,kBAAkB;EAACC;AAAgB,CAAC,GAAGV,cAAc,CAACe,OAAO;AAEzF,eAAef,cAAc,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}