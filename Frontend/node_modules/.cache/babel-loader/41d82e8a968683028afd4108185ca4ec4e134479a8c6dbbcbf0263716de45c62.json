{"ast":null,"code":"var _jsxFileName = \"C:\\\\Miguel\\\\Akademy\\\\Trabajo-Integrador\\\\Frontend\\\\src\\\\components\\\\screens\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { Fab, Paper } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PersonAddAlt1, PersonRemove } from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport { eliminarEmpleado } from '../../store/empleadosSlice/slice';\nimport { Header } from '../common/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Lista = () => {\n  _s();\n  // ======= HOOOKS ===========\n  const {\n    empleados\n  } = useSelector(state => state.empleados);\n  const [deleteList, setDeleteList] = useState([]);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {}, [empleados]);\n\n  // ======= FUNCTIONS ===========\n  const agregarEmpleado = () => {\n    navigate('/new');\n  };\n  const goEdit = rowData => {\n    navigate(`/show/${rowData.id}`);\n  };\n  const deleteSelectedList = () => {\n    dispatch(eliminarEmpleado(deleteList));\n  };\n\n  // ======= PRESETS ===========\n  //PREPARAR LAS COLUMNAS Y QUE DATOS LEERAN DEL EMPLEADOS\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    type: 'number',\n    width: 70\n  }, {\n    field: 'nombre',\n    headerName: 'Nombre',\n    width: 130\n  }, {\n    field: 'apellido',\n    headerName: 'Apellido',\n    width: 130\n  }, {\n    field: 'email',\n    headerName: 'Email',\n    width: 180\n  }, {\n    field: 'telefono',\n    headerName: 'Telefono',\n    type: 'string',\n    width: 130\n  }];\n\n  // ======= RENDER ===========\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        height: 350,\n        maxWidth: '700px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: empleados,\n        columns: columns,\n        pageSize: 5,\n        rowsPerPageOptions: [5],\n        getRowId: row => row.id,\n        checkboxSelection: true,\n        disableSelectionOnClick: true,\n        onRowClick: goEdit,\n        onSelectionModelChange: selectionModel => setDeleteList(selectionModel)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Fab, {\n        color: \"primary\",\n        \"aria-label\": \"add\",\n        onClick: agregarEmpleado,\n        sx: {\n          margin: '20px',\n          bgcolor: '#62B6CB'\n        },\n        children: /*#__PURE__*/_jsxDEV(PersonAddAlt1, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Fab, {\n        color: \"secondary\",\n        \"aria-label\": \"add\",\n        onClick: deleteSelectedList,\n        sx: {\n          margin: '20px',\n          bgcolor: '#d50000'\n        },\n        children: /*#__PURE__*/_jsxDEV(PersonRemove, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Lista, \"XrmYvrnahM40phiqbjBHJ9NOeFw=\", false, function () {\n  return [useSelector, useNavigate, useDispatch];\n});\n_c = Lista;\nexport default Lista;\nvar _c;\n$RefreshReg$(_c, \"Lista\");","map":{"version":3,"names":["React","useEffect","useState","DataGrid","Fab","Paper","useDispatch","useSelector","PersonAddAlt1","PersonRemove","useNavigate","eliminarEmpleado","Header","Lista","empleados","state","deleteList","setDeleteList","navigate","dispatch","agregarEmpleado","goEdit","rowData","id","deleteSelectedList","columns","field","headerName","type","width","height","maxWidth","row","selectionModel","margin","bgcolor"],"sources":["C:/Miguel/Akademy/Trabajo-Integrador/Frontend/src/components/screens/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { Fab, Paper } from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PersonAddAlt1, PersonRemove } from '@mui/icons-material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { eliminarEmpleado } from '../../store/empleadosSlice/slice';\r\nimport { Header } from '../common/Header';\r\n\r\nconst Lista = () => {\r\n    // ======= HOOOKS ===========\r\n    const {empleados} = useSelector(state => state.empleados);\r\n    const [deleteList, setDeleteList] = useState([]);\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n    \r\n    }, [empleados])\r\n    \r\n    // ======= FUNCTIONS ===========\r\n    const agregarEmpleado = () =>{\r\n        navigate('/new');\r\n    };\r\n\r\n    const goEdit = (rowData) => {\r\n        navigate(`/show/${rowData.id}`)\r\n    }\r\n\r\n    const deleteSelectedList = () => {\r\n        dispatch(eliminarEmpleado(deleteList))\r\n    }\r\n\r\n    // ======= PRESETS ===========\r\n    //PREPARAR LAS COLUMNAS Y QUE DATOS LEERAN DEL EMPLEADOS\r\n    const columns = [\r\n        { field: 'id', headerName: 'ID',type: 'number', width: 70 },\r\n        { field: 'nombre', headerName: 'Nombre', width: 130 },\r\n        { field: 'apellido', headerName: 'Apellido', width: 130 },\r\n        { field: 'email',headerName: 'Email',width: 180},\r\n        { field: 'telefono', headerName: 'Telefono',type: 'string', width: 130 }\r\n    ];\r\n    \r\n    // ======= RENDER ===========\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <Paper sx={{ height: 350, maxWidth: '700px'}}>\r\n                <DataGrid\r\n                    rows={empleados}\r\n                    columns={columns}\r\n                    pageSize={5}\r\n                    rowsPerPageOptions={[5]}\r\n                    getRowId={(row) => row.id}\r\n                    checkboxSelection   \r\n                    disableSelectionOnClick\r\n                    onRowClick={goEdit}\r\n                    onSelectionModelChange={(selectionModel) => setDeleteList(selectionModel)}\r\n                />\r\n                <Fab color=\"primary\" aria-label=\"add\" onClick={agregarEmpleado} sx={{margin: '20px', bgcolor: '#62B6CB'}}>\r\n                    <PersonAddAlt1 />\r\n                </Fab>\r\n                <Fab color=\"secondary\" aria-label=\"add\" onClick={deleteSelectedList} sx={{margin: '20px', bgcolor: '#d50000'}}>\r\n                    <PersonRemove />\r\n                </Fab>\r\n            </Paper>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Lista;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}