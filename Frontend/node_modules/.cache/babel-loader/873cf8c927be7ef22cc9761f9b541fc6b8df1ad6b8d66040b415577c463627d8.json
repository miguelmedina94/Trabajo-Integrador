{"ast":null,"code":"var _jsxFileName = \"C:\\\\Miguel\\\\Akademy\\\\Trabajo-Integrador\\\\Frontend\\\\src\\\\components\\\\screens\\\\Create.js\",\n  _s = $RefreshSig$();\nimport { Alert, Snackbar, Stack } from '@mui/material';\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { validateSliceChange } from '../../utils/validate';\nimport { nuevoEmpleado, reemplazarEmpleado } from '../../store/empleadosSlice/slice';\nimport { Header } from '../common/Header';\nimport Formulario from '../formulario';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Create = props => {\n  _s();\n  // ======= HOOOKS ===========\n  const [empleado, setEmpleado] = useState({});\n  const [alert, setAlert] = useState({\n    type: 'success'\n  });\n  const {\n    idNuevo\n  } = useSelector(state => state.idNuevo);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setearTextFields();\n  }, []);\n\n  // ======= FUNCTIONS ===========\n  const screenConfig = () => {\n    const config = {\n      title: `Mostrando Empleado: ${idNuevo}`,\n      empleado: empleado,\n      primaryButton: primaryButton,\n      secondaryButton: secondaryButton,\n      onChangeField: onChangeField,\n      getValueTF: getValueTF,\n      onBlurField: onBlurField,\n      editable: true,\n      textSecondaryButton: 'Volver',\n      textPrimaryButton: 'Guardar'\n    };\n    return config;\n  };\n\n  //FUCION PARA EL BOTON AZUL, FUNCIONA SEGUN EL 'MODO' DEL FORMULARIO\n  const primaryButton = () => {\n    if (alert.type === 'success') {\n      setAlert({\n        open: true,\n        message: `Se creo el empleado ${empleado.nombre} correctamente`,\n        type: 'success'\n      });\n      setTimeout(() => {\n        navigate('/');\n        dispatch(nuevoEmpleado(empleado));\n      }, 3000);\n    }\n  };\n  const secondaryButton = () => {\n    setearTextFields();\n  };\n  const setearTextFields = () => {\n    const empleadoVacio = {\n      id: idNuevo,\n      nombre: '',\n      apellido: '',\n      email: '',\n      telefono: '',\n      fecha_contrato: '',\n      salario: '',\n      comision: ''\n    };\n    setEmpleado(empleadoVacio);\n  };\n\n  //FUNCION ONCLOSE PARA CERRAR EL ALERT AUTOMATICA O MANUALMENTE\n  const onClose = (event, reason) => {\n    if (reason !== 'clickaway') {\n      setAlert({\n        open: false\n      });\n    }\n  };\n  const mostrarMensaje = () => {\n    return /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: alert.open,\n      autoHideDuration: 3000,\n      onClose: onClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: onClose,\n        severity: alert.type,\n        sx: {\n          width: '100%'\n        },\n        children: alert.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this);\n  };\n  const onChangeField = e => {\n    const value = e.target.value;\n    setEmpleado({\n      ...empleado,\n      [e.target.name]: value\n    });\n  };\n  const getValueTF = attr => {\n    return empleado[attr] ? empleado[attr] : '';\n  };\n  const onBlurField = e => {\n    setAlert(validateSliceChange(empleado, e));\n  };\n\n  // ======= PRESETS ===========\n\n  // ======= RENDER ===========\n  if (idNuevo) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        sx: {\n          width: '100%'\n        },\n        children: mostrarMensaje()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formulario, {\n        config: screenConfig()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n};\n_s(Create, \"KZkcPOip8VEwFwL8Diwcsay1I80=\", false, function () {\n  return [useSelector, useNavigate, useDispatch];\n});\n_c = Create;\nexport default Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["Alert","Snackbar","Stack","React","useState","useEffect","useDispatch","useSelector","useNavigate","validateSliceChange","nuevoEmpleado","reemplazarEmpleado","Header","Formulario","Create","props","empleado","setEmpleado","alert","setAlert","type","idNuevo","state","navigate","dispatch","setearTextFields","screenConfig","config","title","primaryButton","secondaryButton","onChangeField","getValueTF","onBlurField","editable","textSecondaryButton","textPrimaryButton","open","message","nombre","setTimeout","empleadoVacio","id","apellido","email","telefono","fecha_contrato","salario","comision","onClose","event","reason","mostrarMensaje","width","e","value","target","name","attr"],"sources":["C:/Miguel/Akademy/Trabajo-Integrador/Frontend/src/components/screens/Create.js"],"sourcesContent":["import { Alert, Snackbar, Stack} from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { validateSliceChange } from '../../utils/validate';\r\nimport { nuevoEmpleado, reemplazarEmpleado } from '../../store/empleadosSlice/slice';\r\nimport { Header } from '../common/Header';\r\nimport Formulario from '../formulario';\r\n\r\nconst Create = (props) => {\r\n    // ======= HOOOKS ===========\r\n    const [empleado , setEmpleado] = useState({});\r\n    const [alert , setAlert] = useState({type:'success'});\r\n    const {idNuevo} = useSelector(state => state.idNuevo);\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        setearTextFields();\r\n    }, [])\r\n    \r\n    // ======= FUNCTIONS ===========\r\n    const screenConfig = () =>{\r\n        const config = {\r\n            title: `Mostrando Empleado: ${idNuevo}`,\r\n            empleado: empleado,\r\n            primaryButton: primaryButton,\r\n            secondaryButton: secondaryButton,\r\n            onChangeField: onChangeField,\r\n            getValueTF: getValueTF,\r\n            onBlurField: onBlurField,\r\n            editable: true,\r\n            textSecondaryButton: 'Volver',\r\n            textPrimaryButton: 'Guardar'\r\n            };\r\n        return config;\r\n    }\r\n\r\n    //FUCION PARA EL BOTON AZUL, FUNCIONA SEGUN EL 'MODO' DEL FORMULARIO\r\n    const primaryButton = () => {\r\n        if(alert.type === 'success'){\r\n            setAlert({open: true, \r\n                    message: `Se creo el empleado ${empleado.nombre} correctamente`,\r\n                    type: 'success'});\r\n            setTimeout(() => {\r\n                navigate('/');\r\n                dispatch(nuevoEmpleado(empleado));\r\n            }, 3000);\r\n        }\r\n    }\r\n\r\n    const secondaryButton = () => {\r\n        setearTextFields();\r\n    };\r\n\r\n    const setearTextFields = () => {\r\n        const empleadoVacio = {\r\n                        id: idNuevo,\r\n                        nombre: '', \r\n                        apellido: '',\r\n                        email: '',\r\n                        telefono: '',\r\n                        fecha_contrato: '',\r\n                        salario: '',\r\n                        comision: ''\r\n                        }\r\n        setEmpleado(empleadoVacio);\r\n    }\r\n\r\n    //FUNCION ONCLOSE PARA CERRAR EL ALERT AUTOMATICA O MANUALMENTE\r\n    const onClose = (event,reason) => {\r\n        if (reason !== 'clickaway') {\r\n            setAlert({open: false});\r\n        }\r\n    };\r\n\r\n    const mostrarMensaje = () => {\r\n        return (\r\n                <Snackbar open={alert.open} autoHideDuration={3000} onClose={onClose}>\r\n                    <Alert onClose={onClose} severity={alert.type} sx={{ width: '100%'}}>\r\n                    {alert.message}\r\n                    </Alert>\r\n                </Snackbar>\r\n        );\r\n    };\r\n\r\n    const onChangeField = (e) => {\r\n        const value = e.target.value;\r\n        setEmpleado({\r\n            ...empleado,\r\n            [e.target.name]: value\r\n        });\r\n    };\r\n\r\n    const getValueTF = (attr) =>{\r\n        return empleado[attr] ? empleado[attr] : '';\r\n    }\r\n\r\n    const onBlurField = (e) => {\r\n        setAlert(validateSliceChange(empleado,e));\r\n    }\r\n\r\n    // ======= PRESETS ===========\r\n\r\n    // ======= RENDER ===========\r\n    if(idNuevo){\r\n        return (\r\n            <>\r\n                <Header/>\r\n                <Stack spacing={2} sx={{ width: '100%' }}>\r\n                    {mostrarMensaje()}\r\n                </Stack>\r\n                <Formulario config={screenConfig()} />\r\n            </>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default Create;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}